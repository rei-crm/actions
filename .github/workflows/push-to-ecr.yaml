name: Push to ECR
on:
  workflow_call:
    secrets:
      AWS_REGION:
        required: true
      AWS_ROLE:
        required: true
    inputs:
      repo:
        required: true
        type: string
      working-directory:
        required: true
        type: string
      docker-file:
        type: string
        default: Dockerfile
      latest:
        type: boolean
        default: true
permissions:
  contents: read
  id-token: write
jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Assume GH Actions Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE }}
          role-session-name: gh-actions-${{ github.run_id }}

      - id: lower-repo
        shell: pwsh
        run: |
          "::set-output name=repository::$($env:GITHUB_REPOSITORY.ToLowerInvariant())"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: network=host

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker Image
        uses: docker/build-push-action@v3
        with:
          context: ${{ inputs.working-directory }}
          file: ${{ inputs.working-directory }}/${{ inputs.docker-file }}
          push: true
          tags: |
            localhost:5000/${{ steps.lower-repo.outputs.repository }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Setup Regctl & Push Commit Tag
        run: |
          curl -L https://github.com/regclient/regclient/releases/latest/download/regctl-linux-amd64 > regctl
          chmod +x regctl
          ./regctl registry set --tls=disabled localhost:5000
          ./regctl image copy localhost:5000/${{ steps.lower-repo.outputs.repository }} ${{ steps.login-ecr.outputs.registry }}/${{ inputs.repo }}:${{ github.sha }}

      - name: Push Latest
        if: ${{ inputs.latest }}
        run: |
          ./regctl image copy localhost:5000/${{ steps.lower-repo.outputs.repository }} ${{ steps.login-ecr.outputs.registry }}/${{ inputs.repo }}:latest
